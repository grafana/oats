version: '3.8'

services:
  # Go based test server
  testserver:
    image: grcevski/tests:gotestserver
    container_name: hatest-testserver
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
      - "50051:50051"
    environment:
      LOG_LEVEL: DEBUG

  # eBPF auto instrumenter
  autoinstrumenter:
    image: grafana/ebpf-autoinstrument:latest
    command:
      - /otelauto
      - --config=/configs/instrumenter-config-traces.yml
    volumes:
      - ./configs/:/configs
      - ./testoutput/run:/var/run/otelauto
    container_name: hatest-autoinstrumenter
    privileged: true # in some environments (not GH Pull Requests) you can set it to false and then cap_add: [ SYS_ADMIN ]
    network_mode: "service:testserver"
    pid: "service:testserver"
    environment:
      PRINT_TRACES: "true"
      OPEN_PORT: "8080"
      SERVICE_NAMESPACE: "integration-test"
      METRICS_INTERVAL: "10ms"
      BPF_BATCH_TIMEOUT: "10ms"
      LOG_LEVEL: "DEBUG"
      METRICS_REPORT_PEER: "true"
      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: "http://otelcol:4318/v1/metrics"
    depends_on:
      testserver:
        condition: service_started

  # OpenTelemetry Collector for Metrics. For Traces, we use directly Jaeger
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.83.0
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config/otelcol-config.yml" ]
    volumes:
      - ./configs/:/etc/otelcol-config
    ports:
      - "4317"          # OTLP over gRPC receiver
      - "4318"          # OTLP over HTTP receiver
      - "9464"          # Prometheus exporter
      - "8888"          # metrics endpoint
    depends_on:
      autoinstrumenter:
        condition: service_started
      prometheus:
        condition: service_started

  prometheus:
    image: quay.io/prometheus/prometheus:v2.34.0
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus-config.yml
      - --storage.tsdb.path=/tmp/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
    volumes:
      - ./configs/:/etc/prometheus
    ports:
      - "9090:9090"